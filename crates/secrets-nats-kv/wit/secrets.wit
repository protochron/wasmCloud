interface secrets {
    /// An error type that encapsulates the different errors that can occur fetching secrets
    variant secrets-error {
        /// This indicates an error from an "upstream" secrets source.
        /// As this could be almost _anything_ (such as Vault, Kubernetes Secrets, KeyValue buckets, etc),
        /// the error message is a string.
        upstream(string),
        /// This indicates an error from an I/O operation.
        /// As this could be almost _anything_ (such as a file read, network connection, etc),
        /// the error message is a string.
        /// Depending on how this ends up being consumed,
        /// we may consider moving this to use the `wasi:io/error` type instead.
        /// For simplicity right now in supporting multiple implementations, it is being left as a string.
        io(string),
    }

    variant secret-value {
        /// A string value
        %string,
        /// A byte array value
        bytes(list<u8>),
    }


    resource secret {
      reveal: func() -> secret-value;
    }

    /// Gets a single opaque secrets value set at the given key if it exists
    get: func(
        /// A string key to fetch
        key: string,
    ) -> result<secret, secrets-error>;

}
